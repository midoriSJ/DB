select
	empno as "사원번호",
	ename as "이름",
	mgr as "사수번호",
	sal as "급여"
from emp
where sal > 2000
order by sal asc


select job, ename from emp where job = 'MANAGER'
and ENAME = 'clark'


select 
	ename,
	hiredate
from emp
where hiredate >= '1981-09-08'
order by hiredate asc

select
	ename as "이름",
	hiredate as "입사날짜",
	job as "직책",
	sal as "급여"
from emp
where deptno = '10' and sal >= 2000
order by sal asc

select sal+100 as "급여" from emp
order by sal asc

select sal*2 as "급여" from emp
order by sal asc

select sal*1.03 as "급여 + 보너스" from emp
order by sal asc
-- sql에서 연산식이 가능하지만 실무에서 쓰이진 않는다.
-- why? 모든 연산은 java, python과 같은 프로그램에서 사용한다.

select sal as "급여", ename as "이름", job as "직책" from emp
where sal >= 1250 and sal <= 2000
order by sal asc


select sal as "급여", ename as "이름", job as "직책" from emp
where sal between 1250 and 2000
order by sal asc

-- 급여가 1000 이하, 2000 이상 받는 사원이름, 급여, 직책 조회
select ename as "이름", sal as "급여", job as "직책" from emp
where sal <= 1000 or sal >= 2000
order by sal asc

-- 정렬 (order by)
-- desc (내림차순)
-- asc (오름차순)
-- order by (기본값)은 오름차순
select ename as "이름", hiredate as "입사 날짜" from emp
order by hiredate asc

select ename as "이름", sal as "급여" from emp
order by sal asc

select job as "직책", ename as "이름", sal as "급여" from emp
order by 3 desc

-- SQL 실행순서
-- FROM >> WHERE >> SELECT >> ORDER BY
-- 직책이 manager인 사원의 직책, 급여, 이름 조회 (급여 내림차순 정렬)
select job, sal, ename from emp
where job = 'manager'
order by 2 desc

select job, sal, ename, comm from emp
where comm != '\0'
order by 2 asc

-- NULL은 데이터가 없음을 의미
-- comm이 null인 사원이름, 직책, 보너스 조회
select ename, job, comm from emp
where comm is null


-- null에 임시로 데이터 채워주기
-- ifnull(컬럼이름, 임시데이터)
-- ifnull() <- 내장함수
select ifnull(comm, 700) from emp

-- 집계함수
-- sum(총합), avg(평균), count(행 수), max(최댓값), min(최솟값)

-- 사원 급여 총합 구하기
select sum(sal) as "전체 급여" from emp

-- 직업이 manager인 사원 급여 총합 구하기
select sum(sal) as "manager 급여 총합" from emp
where job = 'manager'

-- 직업이 manager이고 입사 날짜가 1981-04-02인 사원의 이름, 급여 총합, 입사 날짜 조회
select sum(sal) as "manager 급여 총합" from emp
where job = 'manager' and hiredate = '1981-04-02'

-- 부서 번호가 20번인 사원 급여 평균
select avg(sal) from emp where deptno = 20

-- 직업이 manager인 사원 중 sal이 가장 높은 사원 이름, 급여 조회
select max(sal) from emp where job = 'manager'

-- 날짜함수
-- 사원 입사일 조회
select hiredate from emp order by hiredate asc

-- 사원 입사일 중 월만 조회
select date_format(hiredate, '%m') from emp

-- 사원 입사일 중 날짜만 조회
select date_format(hiredate, '%d') from emp

-- 사원 입사일 중 월 일만 조회
select date_format(hiredate, '%M-%D') from emp

-- 6월 달에 입사한 사원의 이름, 직책, 입사 날짜, 급여 출력
select ename, job, date_format(hiredate, '%M'), sal from emp
where date_format(hiredate, '%M') = 'june'

-- 1. 사원번호, 사원이름, 부서번호, 사수번호 조회
select empno, ename, deptno, mgr from emp

-- 2. 사원이름, 급여, 입사날짜 조회
select ename, sal, hiredate from emp

-- 3. 급여가 1500 이상 받는 사원번호, 이름, 급여, 직책 조회
select empno, ename, sal, job from emp
where sal >= 1500

-- 4. 급여가 1500 이상이고 직책이 SALESMAN인 사원 번호, 이름, 급여, 직책 조회
select empno, ename, sal, job from emp
where sal >= 1500 and job = 'salesman'

-- 5. 급여가 1500 ~ 2850 사이의 범위에 속하지 않는 모든 사원의 이름, 급여 조회
select ename, sal from emp
where sal >= 1500 and sal <= 2850

-- 6. 1981년 2월 20일 ~ 1981년 5월 1일에 입사한 사원의 이름, 입사일 조회
select ename, hiredate from emp
where hiredate >= '1981-02-20' and hiredate <= '1981-05-01'
order by hiredate asc

-- 7. 부서가 10, 30에 속하는 사원 중 급여가 1500을 넘는 사원의 이름 및 급여 조회
select ename, sal, deptno from emp
where deptno = 10 or deptno = 30 and sal >= 1500
order by sal asc

-- 8. 1982년에 입사한 모든 사원의 이름과 입사일 조회
select ename, hiredate from emp
where date_format(hiredate, "%Y") = '1982'

-- 9. 직업이 manager 사람들의 급여 평균을 조회
select avg(sal) from emp 
where job = 'manager'

-- 10. 입사날짜가 1987-06-28 이후 입사한 사원들의 급여 평균 조회.
select avg(sal) from emp
where hiredate >= '1987-06-28'

-- 11. 9월에 입사한 사원의 이름, 번호, 입사날짜 조회
select ename, empno, hiredate from emp
where date_format(hiredate, "%m") = '09'

-- 12. 직업이 SALESMAN 이고 입사날짜가 1981-02-22 이후에 들어온 사원들의 급여 총합, 급여평균 조회.
select sum(sal), avg(sal) from emp
where job = 'salesman' and hiredate >= '1981-02-22'

-- 13. 직업이 MANAGER고 SALESMAN 사원들 이름, 직업, 급여 조회 단, 급여를 내림차순으로 정렬
select ename, job, sal from emp
where job = 'manager' or job = 'salesman'
order by sal desc

-- 14. 보너스를 받은 사원 이름, 보너스 조회 단, 0도 제외.
select ename, comm from emp
where comm is not null and comm != 0

-- 15. 1983년 이후 입사한 사원의 급여 10%를 보너스로 주고, 사원의 이름, 보너스 금액, 급여, 입사날짜(년도만) 조회
select ename, sal*0.1, sal, date_format(hiredate, "%Y") from emp
where date_format(hiredate, "%Y") >= '1983'
